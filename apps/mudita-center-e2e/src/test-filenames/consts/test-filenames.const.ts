/**
 * Copyright (c) Mudita sp. z o.o. All rights reserved.
 * For licensing, see https://github.com/mudita/mudita-center/blob/master/LICENSE.md
 */

// the format should stay as it is - it should contain `./` at the beginning
export enum TestFilesPaths {
  messagesInAppNavigationTest = "src/specs/messages/messages-in-app-navigation.e2e.ts",
  helpSectionCheckTest = "src/specs/help/help-section-check.e2e.ts",
  helpSectionCheckTestOffline = "src/specs/help/help-section-check-offline.e2e.ts",
  homePageTestDeviceNotConnectedTest = "src/specs/overview/home-page-device-not-connecting.e2e.ts",
  e2eMockSample = "src/specs/overview/e2e-mock-sample.e2e.ts",
  mcCheckForUpdatesTest = "src/specs/settings/mc-version-check-for-updates.e2e.ts",
  newsPageOnlineTest = "src/specs/news/news-check-online.e2e.ts",
  newsMoreNews = "src/specs/news/more-news.e2e.ts",
  newsPageOfflineTest = "src/specs/news/news-check-offline.e2e.ts",
  termsOfServiceTest = "src/specs/settings/terms-of-service.e2e.ts",
  backupLocationTest = "src/specs/settings/backup-location.e2e.ts",
  mcCheckForUpdatesOfflineTest = "src/specs/settings/mc-version-check-for-updates-offline.e2e.ts",
  privacyPolicyTest = "src/specs/settings/privacy-policy.e2e.ts",
  licenseTest = "src/specs/settings/license.e2e.ts",
  mcHomePageForceUpdateTest = "src/specs/overview/e2e-mock-mc-force-update-available.e2e.ts",
  mcHomePageForceUpdateErrorTest = "src/specs/overview/e2e-mock-mc-force-update-error.e2e.ts",
  mcHomePageSoftUpdateTest = "src/specs/overview/e2e-mock-mc-soft-update-available.e2e.ts",
  mcHomePageSoftUpdateErrorTest = "src/specs/overview/e2e-mock-mc-soft-update-error.e2e.ts",
  kompaktOverview = "src/specs/overview/kompakt-overview.ts",
  kompaktSwitchingDevices = "src/specs/overview/kompakt-switching-devices.ts",
  kompaktAbout = "src/specs/overview/kompakt-about.ts",
  kompaktConnectedDevicesModalStressTest = "src/specs/stress-tests/connected-devices-stress-test.ts",
  kompaktDrawerStressTest = "src/specs/stress-tests/device-drawer-stress-test.ts",
  contactSupportUnhappyPath = "src/specs/help/contact-support-unhappy-path.ts",
  kompaktBackupModalGettingInitialInfo = "src/specs/overview/kompakt-backup-getting-initial-info.ts",
  helpVerifyFeedback = "src/specs/help/help-verify-feedback.ts",
  helpSectionSearchNoResults = "src/specs/help/help-section-search-noresults.e2e.ts",
  helpLinkInsideContainer = "src/specs/help/help-link-inside-container.ts",
  contactSupportHappyPath = "src/specs/help/contact-support-happy-path.ts",
  kompaktBackupApi = "src/specs/overview/kompakt-backup-api.ts",
  kompaktContactsViewing = "src/specs/overview/kompakt-contacts-viewing.ts",
  kompaktContactsViewingEmpty = "src/specs/overview/kompakt-contacts-viewing-empty.ts",
  kompaktContactsDeleteDetails = "src/specs/overview/kompakt-contacts-delete-details.ts",
  kompaktContactsDelete = "src/specs/overview/kompakt-contacts-delete.ts",
  kompaktContactsViewingDetails = "src/specs/overview/kompakt-contacts-viewing-details.ts",
  kompaktContactsSearch = "src/specs/overview/kompakt-contacts-search.ts",
  kompaktConnectingSecondKompaktWhileInNews = "src/specs/overview/kompakt-connecting-second-kompakt-while-in-news.ts",
  kompaktPasscodeClose = "src/specs/overview/kompakt-passcode-close.ts",
  kompaktDisconnectDuringBackup = "src/specs/overview/kompakt-disconnect-during-backup.ts",
  kompaktBackupErrorCancel = "src/specs/overview/kompakt-backup-error-cancel.ts",
  kompaktBackupErrorDisconnect = "src/specs/overview/kompakt-backup-error-disconnect.ts",
  helpSectionKompakt = "src/specs/help/help-section-check-kompakt.ts",
  kompaktManageFilesOverall = "src/specs/overview/kompakt-manage-files-overall-check.ts",
  kompaktBackupFailedFullStorage = "src/specs/overview/kompakt-backup-error-storage-full.ts",
  kompaktManageFilesRemoveFiles = "src/specs/overview/kompakt-manage-files-remove-files.ts",
  kompaktManageFilesDeleteApkText = "src/specs/overview/kompakt-manage-files-delete-apk-text.ts",
  kompaktManageFilesInstallApkModalUpdate = "src/specs/overview/kompakt-manage-files-install-apk-modal-update.ts",
}
export const toRelativePath = (path: string) => `./${path}`
